<?xml version="1.0" encoding="utf-8"?>
<Task>
	<!-- reference task information -->
	<Reference>
		<Author>
			<name>Tomasz Kornuta</name>
			<link></link>
		</Author>
		
		<Description>
			<brief>RGBDSequenceMaskCloudTransformer</brief>
			<full>Loads colour and depth images, localizes reference frame of the board, extract mask, transforms them into point clouds from the area represented by the mask and ,  and displays point clouds wrt board reference frame.</full>
		</Description>
	</Reference>
	
	<!-- task definition -->
	<Subtasks>
		<Subtask name="Processing">
			<Executor name="Processing"  period="0.2">
<!--------------------------------------------------------------------------------------------------------------------->
<!--                                     Sources
<!--------------------------------------------------------------------------------------------------------------------->

				<Component name="Trigger" type="CvBasic:Trigger" priority="1" bump="0">
                                        <param name="auto_trigger">0</param>
				</Component>

				<Component name="RGBSequence" type="CvBasic:Sequence" priority="2" bump="0">
<!--					<param name="sequence.directory">/home/mlaszkow/DCL/ecovi/data/ahmad/</param> -->
					<param name="sequence.directory">%[TASK_LOCATION]%/../data/rgbd_mieta/</param> 
					<param name="sequence.pattern">.*_rgb.png</param>
                                        <param name="mode.loop">1</param>
                                        <param name="mode.auto_next_image">0</param>
<!--                                        <param name="mode.auto_streaming">0</param>-->
				</Component>

				<Component name="DepthSequence" type="CvBasic:Sequence" priority="3" bump="0">
<!--					<param name="sequence.directory">/home/mlaszkow/DCL/ecovi/data/ahmad/</param> -->
					<param name="sequence.directory">%[TASK_LOCATION]%/../data/rgbd_mieta/</param> 
					<param name="sequence.pattern">.*_depth.png</param>
                                        <param name="mode.loop">1</param>
                                        <param name="mode.auto_next_image">0</param>
<!--                                        <param name="mode.auto_streaming">0</param>-->
				</Component>

				<Component name="CameraInfo" type="CvCoreTypes:CameraInfoProvider" priority="4">
					<param name="width">640</param>
					<param name="height">480</param>
					<param name="camera_matrix">525 0 319.5 ; 0 525 239.5 ; 0 0 1</param>
					<param name="dist_coeffs">0.18126525 -0.39866885 0.00000000 0.00000000 0.00000000</param>
				</Component>

				<Component name="D2XYZConverter" type="CameraNUI:DepthConverter" priority="5" bump="0">
					<param name="depth_mode">point_cloud</param>
				</Component>

<!--------------------------------------------------------------------------------------------------------------------->
<!--                                     Board pose estimation
<!--------------------------------------------------------------------------------------------------------------------->

				<Component name="DetectCircles" type="CvBasic:CvFindCirclesGrid" priority="10">
					<param name="grid.width">3</param>
					<param name="grid.height">5</param>
					<param name="grid.size">0.06</param>
				</Component>
				
				<Component name="DetectCirclesInv" type="CvBasic:CvFindCirclesGrid" priority="11">
					<param name="grid.width">3</param>
					<param name="grid.height">5</param>
					<param name="grid.size">0.06</param>
					<param name="image.inverse">1</param>
				</Component>
				<Component name="SolvePNP" type="CvBasic:CvSolvePnP" priority="12">
					<param name="offset.x">0.075</param>
					<param name="offset.y">0.233</param>
					<param name="offset.roll">3.14159265359</param>
				</Component>
				<Component name="SolvePNPinv" type="CvBasic:CvSolvePnP" priority="13">
					<param name="offset.x">0.075</param>
					<param name="offset.y">-0.113</param>
					<param name="offset.roll">3.14159265359</param>
				</Component>

				<Component name="SolveLocation" type="CvBasic:CalcObjectLocation" priority="14" bump="0">
				</Component>

<!--------------------------------------------------------------------------------------------------------------------->
<!--                              Extraction of fragment of cloud constituting the object
<!--------------------------------------------------------------------------------------------------------------------->

				<Component name="DepthTransform" type="CvStereo:DepthTransform" priority="20" bump="-2">
				</Component>

				<Component name="BoardExtractor" type="ModelViewAcquisition:CubicMaskExtractor" priority="21" bump="0">
					<param name="BlueAxis(X).X_Max">0.15</param>
					<param name="BlueAxis(X).X_Min">-0.15</param>
					<param name="GreenAxis(Y).Y_Max">0.25</param>
					<param name="GreenAxis(Y).Y_Min">-0.25</param>
					<param name="RedAxis(Z).Z_Max">0.6</param>
					<param name="RedAxis(Z).Z_Min">0.01</param>
				</Component>

				<Component name="RGBXYZM2PCConverter" type="PCL:DepthConverter" priority="22" bump="0">
				</Component>

				<Component name="XYZ2RainbowTransformed" type="CvStereo:DepthRainbow" priority="23" bump="0">
				</Component>

<!--				<Component name="MLSSmoothing" type="PCL:MLSSmoothing" priority="24" bump="0">
				</Component>-->

				<Component name="StatisticalOutlierRemoval" type="PCL:StatisticalOutlierRemoval" priority="24" bump="0">
					<param name="MeanK">1000</param>
					<param name="StddevMulThresh">0.001</param>
				</Component>
				

<!--------------------------------------------------------------------------------------------------------------------->
<!--                              Registration
<!--------------------------------------------------------------------------------------------------------------------->

				<Component name="InitialTransformation" type="CvCoreTypes:HomogenousMatrixProvider" priority="30" bump="0">
				</Component>

				<Component name="PairwiseRegistration" type="PCL:PairwiseRegistration" priority="31" bump="1">
					<param name="Mode.ICP">1</param>
					<param name="ICP.UseColour">0</param>
					<param name="ICP.UseNormals">0</param>
					<param name="ICP.MaxCorrespondenceDistance">0.01</param>
					<param name="ICP.MaximumIterations">50</param>
					<param name="ICP.EuclideanFitnessEpsilon">0.1</param>
					<param name="ICP.TransformationEpsilon">1e-20</param>
				</Component>

				<Component name="CloudStorage" type="PCL:CloudStorage" priority="32" bump="0">
				</Component>


<!--------------------------------------------------------------------------------------------------------------------->
<!--                              Visualization
<!--------------------------------------------------------------------------------------------------------------------->

<!--				<Component name="Draw" type="CvBasic:DrawCoordinateSystem" priority="100">
				</Component>-->


<!--				<Component name="Window" type="CvBasic:CvWindow" priority="101" bump="0">
					<param name="count">1</param>
					<param name="title">Board Pose</param>
				</Component>-->


<!--				<Component name="Viewer" type="PCL:CloudViewer" priority="102" bump="0">
					<param name="title">Point cloud readed from RGB-D file</param>
				</Component>-->

			</Executor>
		</Subtask>
		
		<Subtask name="Visualisation">
			<Executor name="Exec2" period="0.2">
				<Component name="Viewer" type="PCL:CloudViewer" priority="1" bump="0">
					<param name="title">Model point cloud</param>
                                        <param name="coordinate_system">0</param>
				</Component>
			</Executor>
		</Subtask>	
	
	</Subtasks>



















	
	<!-- pipes connecting datastreams -->
	<DataStreams>
<!--------------------------------------------------------------------------------------------------------------------->
<!--                                     Sources
<!--------------------------------------------------------------------------------------------------------------------->
		<Source name="Trigger.out_trigger">
			<sink>RGBSequence.in_next_image_trigger</sink>
			<sink>DepthSequence.in_next_image_trigger</sink>
<!--			<sink>RGBSequence.in_stream_trigger</sink>
			<sink>DepthSequence.in_stream_trigger</sink>-->
			<sink>PairwiseRegistration.in_store_previous_cloud_trigger</sink>
			<sink>CloudStorage.in_add_cloud_trigger</sink>
		</Source>

		<Source name="DepthSequence.out_img">
 			<sink>D2XYZConverter.in_depth</sink>
<!--			<sink>RGBXYZM2PCConverter.in_depth</sink>	-->
		</Source>	
	
		<Source name="RGBSequence.out_img">
			<sink>RGBXYZM2PCConverter.in_color</sink>
			<sink>DetectCircles.in_img</sink>
			<sink>DetectCirclesInv.in_img</sink>
<!--			<sink>Window.in_img0</sink> DRAW-->	
		</Source>		
		<Source name="CameraInfo.out_camera_info">
			<sink>D2XYZConverter.in_camera_info</sink>
<!--			<sink>RGBXYZM2PCConverter.in_camera_info</sink>	NIEPOTRZEBNE! -->
			<sink>SolvePNP.in_camerainfo</sink>
			<sink>SolvePNPinv.in_camerainfo</sink>
<!--			<sink>Draw.in_camera_matrix</sink> DRAW-->
		</Source>

		<Source name="D2XYZConverter.out_img">
		  	<sink>DepthTransform.in_image_xyz</sink>
<!--			<sink>XYZ2RainbowTransformed.in_depth_xyz</sink>-->
 		</Source>

		<Source name="XYZ2RainbowTransformed.out_depth_rainbow">
<!--			<sink>Window.in_img1</sink> DRAW-->
		</Source>

<!--------------------------------------------------------------------------------------------------------------------->
<!--                                     Board pose estimation
<!--------------------------------------------------------------------------------------------------------------------->

		<Source name="DetectCircles.out_pattern">
<!--			<sink>Window.in_draw0</sink> DRAW-->
			<sink>SolvePNP.in_object3d</sink>		
		</Source>
		<Source name="DetectCirclesInv.out_pattern">
<!--			<sink>Window.in_draw0</sink>  DRAW-->
			<sink>SolvePNPinv.in_object3d</sink>	
		</Source>

		<Source name = "SolvePNPinv.out_homogMatrix">
			<sink>SolveLocation.in_homogMatrix</sink>
<!--			<sink>DepthTransform.in_homogMatrix</sink>-->
		</Source>
		<Source name= "SolvePNP.out_homogMatrix">
			<sink>SolveLocation.in_homogMatrix</sink>
<!--			<sink>DepthTransform.in_homogMatrix</sink>-->
		</Source>
		<Source name= "SolveLocation.out_homogMatrix">
<!--			<sink>Draw.in_homogMatrix</sink> DRAW-->
			<sink>DepthTransform.in_homogMatrix</sink>
		</Source>

<!--		<Source name="Draw.out_csystem">
			<sink>Window.in_draw0</sink>		
		</Source> DRAW-->

<!--------------------------------------------------------------------------------------------------------------------->
<!--                              Extraction of fragment of cloud constituting the object
<!--------------------------------------------------------------------------------------------------------------------->

		<Source name="DepthTransform.out_image_xyz">
			<sink>BoardExtractor.in_image_xyz</sink>
			<sink>RGBXYZM2PCConverter.in_depth_xyz</sink>
		</Source>


		<Source name="BoardExtractor.out_mask">
			<sink>RGBXYZM2PCConverter.in_mask</sink>
		 </Source>

		<Source name="RGBXYZM2PCConverter.out_cloud_xyzrgb">
			<sink>StatisticalOutlierRemoval.in_cloud_xyzrgb</sink>

		</Source>

		<Source name="StatisticalOutlierRemoval.out_cloud_xyzrgb">
<!--			<sink>MLSSmoothing.in_cloud_xyzrgb</sink>-->
<!--			<sink>Viewer.in_cloud_xyzrgb</sink>-->
			<sink>PairwiseRegistration.in_cloud_xyzrgb</sink>
			<sink>CloudStorage.in_cloud_xyzrgb</sink>
<!--			<sink>Viewer.in_cloud_xyzrgb</sink>-->
		</Source>

<!--		<Source name="MLSSmoothing.out_cloud_xyzrgb">
			<sink>Viewer.in_cloud_xyzrgb</sink>		
		</Source>-->

<!--------------------------------------------------------------------------------------------------------------------->
<!--                              Registration
<!--------------------------------------------------------------------------------------------------------------------->

		<Source name= "InitialTransformation.out_homogMatrix">
			<sink>PairwiseRegistration.in_transformation</sink>
		</Source>

		<Source name="PairwiseRegistration.out_transformation_xyzrgb">
			<sink>CloudStorage.in_transformation</sink>
		</Source>

		<Source name="CloudStorage.out_cloud_xyzrgb">
			<sink>Viewer.in_cloud_xyzrgb</sink>
		</Source>

	</DataStreams>
</Task>




